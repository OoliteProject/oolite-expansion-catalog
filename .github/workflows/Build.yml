name: Build
on:
  schedule:
    - cron: '0 1 1 * *'
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - id: download
      uses: robinraju/release-downloader@v1.8
      with: 
        repository: "HiranChaudhuri/OoliteAddonScanner"
    
        # A flag to set the download target as latest release
        # The default value is 'false'
        latest: false
    
        # The github tag. e.g: v1.0.1
        # Download assets from a specific tag/version
        tag: "v1.0.37"
    
        # The release id to download files from 
        releaseId: ""
    
        # The name of the file to download.
        # Use this field only to specify filenames other than tarball or zipball, if any.
        # Supports wildcard pattern (eg: '*', '*.deb', '*.zip' etc..)
        fileName: "*.tar.gz"
    
        # Download the attached tarball (*.tar.gz)
        tarBall: false
    
        # Download the attached zipball (*.zip)
        zipBall: false
    
        # Relative path under $GITHUB_WORKSPACE to place the downloaded file(s)
        # It will create the target directory automatically if not present
        # eg: out-file-path: "my-downloads" => It will create directory $GITHUB_WORKSPACE/my-downloads
        out-file-path: ""

        # A flag to set if the downloaded assets are archives and should be extracted
        # Checks all downloaded files if they end with zip, tar or tar.gz and extracts them, if true.
        # Prints a warning if enabled but file is not an archive - but does not fail.
        extract: true

        # Github access token to download files from private repositories
        # https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
        # eg: token: ${{ secrets.MY_TOKEN }}
        # token: ""

        # The URL of the Github API, only use this input if you are using Github Enterprise
        # Default: "https://api.github.com"
        # Use http(s)://[hostname]/api/v3 to access the API for GitHub Enterprise Server
        # github-api-url: ""

    - name: check
      run: |
        echo "Tag: ${{steps.download.outputs.tag_name}}"
        printenv | sort
        find
